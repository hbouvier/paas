#!/bin/bash
set -e
MODULE="build-app-container"

function log() {
        DATE=`date '+%Y-%m-%d %H:%M:%S'`
        printf "    ${DATE}"
        printf '|%s' "${MODULE}" "$@"
        printf "\n"
}
function assert() {
        CODE=$?
        if [ "$CODE" != "0" ] ; then
                log "FATAL" "FAILURE" "$*" "code=$CODE"
                exit $CODE
        fi
}

NAME="$1"
APP="$2"
PORT="$3"
DOMAIN=`cat /home/git/DOMAIN`

log "INFO" "Building container for application $NAME"

# Place the app inside the container
log "INFO" "Receiving application source from git"

#ID=$(cat | docker run -i -a stdin hbouvier/ubuntu_paas /bin/bash -c "mkdir -p /app && tar -xC /app && echo 'export BASEURL=${APP}.${DOMAIN}' > /.env ; echo 'export BASEPORT=80' >> /.env")
# save the Pushed Application
GITARCHIVE=/tmp/$$.tar
cat > "${GITARCHIVE}"

# Verify if it is a Docker Container to be built
tar tvf "${GITARCHIVE}" Dockerfile > /dev/null 2>&1 ; CODE=$?
if [ "${CODE}" == "0" ] ; then
	log "INFO" "Building a Docker Container"
	GITARCHIVEDIR="/tmp/$$"
	mkdir -p "${GITARCHIVEDIR}"
	cd "${GITARCHIVEDIR}"
	log "INFO" "extracting the Docker Container"
	tar xf "${GITARCHIVE}" > /dev/null 2>&1
	log "INFO" "building the Docker Container"
	docker build -t $NAME .  | sed -e 's/^/        /'
	assert "docker build $ID $NAME"
	if [ -r "Dockinfo" ] ; then
		log "INFO" "Copying Dockinfo to ${HOME}/${APP}/"
		cp Dockinfo "${HOME}/${APP}/"
	fi
	
else
	ID=$(cat "${GITARCHIVE}" | docker run -i -a stdin hbouvier/ubuntu_paas /bin/bash -c "mkdir -p /app && tar -xC /app && echo 'export BASEURL=${APP}.${DOMAIN}' > /.env ; echo 'export BASEPORT=80' >> /.env")

	assert "Installing $NAME in a container"
	docker wait $ID >/dev/null
	assert "docker wait $ID $NAME"
	docker commit $ID $NAME > /dev/null
	assert "docker commit $ID $NAME"

	log "INFO" "Docker commiting application $NAME (ID=$ID)"
	docker logs $ID 2>&1 | sed -e 's/^/        /'
	assert "Extracting container installation logs"

	# Run the builder script and attach to view output
	log "INFO" "Building application from source"
	ID=$(docker run -d $NAME /paas/build-application)
	assert "Building application $NAME in the container"

	docker attach $ID 2>&1 | sed -e 's/^/        /'
	assert "Attaching to the container $ID to see the compilation logs"
	docker commit $ID $NAME > /dev/null
	assert "docker commit $ID $NAME"
	log "INFO" "Docker commiting application $NAME (ID=$ID)"
	docker logs $ID 2>&1 | sed -e 's/^/        /'
	assert "Extracting the logs of compilation for application $NAME $ID"
fi

log "INFO" "SUCCESS"
if [ -r "${GITARCHIVE}" ] ; then
	rm -f "${GITARCHIVE}"
fi
if [ "${GITARCHIVEDIR}" != "" -a -d "${GITARCHIVEDIR}" ] ; then
	rm -rf "${GITARCHIVE}"
fi
